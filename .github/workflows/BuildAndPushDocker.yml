name: Build and publish Docker
on:
  push:
    branches: main
jobs:

  check_code:
    name: Check code style & lint with flake8
    runs-on: ubuntu-latest
    steps:
    - name: Setup Python
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
          python-version: 3.7.4
          architecture: x64
    - name: Install flake8
      run: pip install flake8
    - name: Run flake8
      uses: suo/flake8-github-action@releases/v1
      with:
          checkName: 'check_code'   # NOTE: this needs to be the same as the job name
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          
  snyk_test:
    name: Snyk test
    needs: [check_code]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
        
    - name: Run Snyk to check for vulnerabilities
      working-directory: ${{github.workspace}}/src
      run: |
        pip install -r requirements.txt
        npm install -g snyk
        snyk auth ${{secrets.SNYK_TOKEN}}
        snyk test
        
  sonnar_cloud_test:
    name: Sonnar cloud test
    needs: [check_code]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
          
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: ["snyk_test","sonnar_cloud_test"]
    steps:
    
      - name: Check out the repo
        uses: actions/checkout@v4
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKERUSERNAME }}
          password: ${{ secrets.DOCKERPASSWORD }}
      
      - name: Build and push Docker image
        run: |
            docker build -t "classwork1" .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'classwork1'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'


      - name: Tag an image
        run: docker tag classwork1 kzah/devops_classwork1:version1.0
        
      - name: Push an image to DockerHub
        run: docker push kzah/devops_classwork1:version1.0
